@use '../../../_css/queries.scss' as *;

.nav {
  display: flex;
  gap: calc(var(--base) / 4) var(--base);
  align-items: center;
  flex-wrap: wrap;
  opacity: 1;
  transition: opacity 100ms linear;
  visibility: visible;
  justify-content: flex-start;

  > * {
    text-decoration: none;
  }
}

.navItem {
  color: white; 
  margin-right: 0;
}

.container {
  position: relative; /* Similar to 'relative' in Tailwind */
  display: flex;      /* Similar to 'flex' */
  align-items: center; /* Same as 'items-center' */
  width: 100%;        /* Same as 'w-full' */
  padding-left: 16px; /* Same as 'px-4' (horizontal padding of 16px) */
  padding-right: 16px; 
}

.input {
  flex-grow: 1; /* Similar to 'flex-grow' */
  padding: 12px 28px; /* Same as 'px-7 py-3' (28px horizontal padding, 12px vertical padding) */
  border-radius: 8px; /* Same as 'rounded-lg' */
  color: black; /* Same as 'text-black' */
  transition: all 300ms; /* Similar to 'transition-all duration-300' */
}

.button {
  position: absolute; /* Similar to 'absolute' */
  right: 20px; /* Same as 'right-5' (5 * 4px = 20px) */
  padding: 4px 16px; /* Same as 'px-4 py-1' (16px horizontal padding, 4px vertical padding) */
  background-color: white; /* Same as 'bg-white' */
  color: black; /* Same as 'text-black' */
  border-radius: 8px; /* Same as 'rounded-lg' */
  transition: opacity 300ms ease-in-out; /* Similar to 'transition-opacity duration-300 ease-in-out' */
  opacity: 1; /* 'opacity-100' translates to full visibility */
}

.button.hidden {
  opacity: 0; /* 'opacity-0' for hidden button */
}


.hide {
  opacity: 0;
  visibility: hidden;
}
